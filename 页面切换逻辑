//router.js//
import { createRouter, createWebHistory } from 'vue-router'
import Page1 from '@/views/Page1.vue'
import Page2 from '@/views/Page2.vue'
import Page3 from '@/views/Page3.vue'
import Sheet from '@/views/sheet.vue'

const router = createRouter({
  history: createWebHistory(),
  routes: [
    {
      path: '/',
      component: Page1,
      children: [
        {
          name: 'Sheet',
          path: '/sheet',
          component: Sheet,
          meta: {
            scrollToTop: false, // 在这里添加 scrollToTop 属性
          },
        },
      ],
    },
    {
      path: '/page2',
      name: 'Page2',
      component: Page2,
      meta: {
        scrollToTop: false, // 在这里添加 scrollToTop 属性
      },
    },
    {
      path: '/page3',
      name: 'Page3',
      component: Page3,
      meta: {
        scrollToTop: false, // 在这里添加 scrollToTop 属性
      },
    },
  ],
  scrollBehavior (to, from, savedPosition) {
    if (to.meta.scrollToTop) {
      return { top: 0 }
    } else if (savedPosition) {
      return savedPosition
    } else {
      return null
    }
  },
})

export default router

//app.vue//
<template>
  <div class="overflow-y-scroll no-scrollbar">
    <!-- <NavBar></NavBar> -->
  </div>
  <div class="text-2xl container fixed top-0 z-10 space-x-6  bg-white w-full ">
      <router-link to="/">Page1</router-link>
      <router-link to="/page2">Page2</router-link>
      <router-link to="/page3">Page2</router-link>

    </div >
    <div class="pt-64 ">
    <router-view v-slot="{ Component }">
    <transition name="slide" >
      <component :is="Component" />
    </transition>
  </router-view>
</div>
</template>

<script>
import NavBar from "./components/NavBar.vue";

export default {
  components: {
    NavBar,
  },
  data() {
    return {
    };
  },
  // rest of the code
};

</script>

<style>

::-webkit-scrollbar {
  display: none;
}

.slide-leave-active {
  transition: all 0.75s ease-out;
}
.slide-enter-to {
  position: relative;
  right: 0;
}
.slide-enter-from {
  position: absolute;
  right: -100%;
}
.slide-leave-to {
  position: absolute;
  left: -100%;
}
.slide-leave-from {
  position: absolute;
  left: 0;
}
</style>


//page1.vue//
<template>
  <div class="container w-full text-4xl h-screen bg-orange-500">
    <h1>Page12 contentPage12 contentPage12 contentPage12 contentPage12 contentPage12 contentPage12 contentPage12 contentPage12 contentPage12 contentPage12 contentPage12 contentPage12 contentPage12 contentPage12 contentPage12 contentPage12 content</h1>
<div ref="buttonContainer">
  <button @click="showContainer">Work1</button>
</div>
    <router-view v-slot="{ Component }">
    <transition name="container1" >
      <component :is="Component" />
    </transition>
  </router-view>
  </div>
</template>

<script>
export default {
  data() {
    return {
      show: false
    };
  },
  methods: {
    showContainer() {
    this.$router.push('/sheet');
  },
    goToPage2() {
    this.$router.push("/page2");
  },
  }
};
</script>

<style>
.container1 {
position: absolute;
top: 0%; /* 您可以根据需要调整这个值 */
width: 100%;
}
.container1-enter-active,
.container1-leave-active {
  transition: all 0.5s;
}
.container1-enter-from,
.container1-leave-to {
  transform: translateY(100%);
}
.container1-enter-to,

.container1-leave-from {
  transform: translateY(0%);
}
</style>
  
//sheets.vue//
<template>
  <div class="container1 fixed bg-slate-400 h-screen pt-32">
    <h2>Work1Work1Work1Work1</h2>
    <button @click="goBack">返回</button>
    <div class="scrollable text-9xl "> <!-- 添加.scrollable子div -->
      <!-- 在这里添加你需要的内容 -->
      <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer nec odio. Praesent libero. Sed cursus ante dapibus diam. Sed nisi. Nulla quis sem at nibh elementum imperdiet. Duis sagittis ipsum. Praesent mauris.</p>
      <!-- 添加更多内容以测试滚动效果 -->
    </div>
  </div>
</template>

<script>
export default {
  name: "container1",
  methods: {
    goBack() {
      this.$router.go(-1);
    }
  }
  // 移除 mounted 生命周期钩子
};
</script>

<style>
.container1 {
  top: 0;
  left: 0;
  width: 150%;
  z-index: 1000; /* 添加 z-index 以确保组件始终在其他元素之上 */
}

.scrollable {
  height: calc(100% - 4rem); /* 计算可滚动区域的高度，这里减去4rem是为了给标题和按钮留出空间 */
  overflow-y: auto; /* 设置垂直滚动 */
  padding: 0 1rem; /* 为.scrollable区域添加内边距 */
}

.container {
  transition: all 0.5s;
}
</style>

